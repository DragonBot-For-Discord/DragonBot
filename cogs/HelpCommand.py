import disnake as discord
from disnake.ext import commands
from disnake import Localized
import sqlite3

connection = sqlite3.connect('database.db')
cursor = connection.cursor()
print("[SQLite HelpCommand] database.db –∑–∞–≥—Ä—É–∂–µ–Ω!")

embedColor = 0x520500

class HelpDropdown(discord.ui.Select):
    def __init__(self, langCode):
        langCodeReal = langCode
        if langCodeReal == 'ru':
            # Set the options that will be presented inside the dropdown
            options = [
                discord.SelectOption(
                    label="–ú–æ–¥–µ—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞", description="–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–π —Å–µ—Ä–≤–µ—Ä–∞", emoji="üîß", value="moderation"
                ),
                discord.SelectOption(
                    label="–ö–æ–º–∞–Ω–¥—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–π", description="–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–π —Ä–∞–∑–Ω—ã—Ö —à—Ç—É–∫", emoji="üö¶", value="command_generations"
                ),
                discord.SelectOption(
                    label="–ê–≤—Ç–æ–ú–æ–¥–µ—Ä–∞—Ü–∏—è", description="–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–π —Ä–∞–∑–Ω—ã—Ö —à—Ç—É–∫", emoji="üî®", value="automod"
                ),
                discord.SelectOption(
                    label="–í—Å—è–∫–∏–µ –≤–µ—Å—ë–ª—ã–µ —à—Ç—É–∫–∏", description="–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–π —Ä–∞–∑–Ω—ã—Ö —à—Ç—É–∫", emoji="üéÆ", value="fun"
                ),
                discord.SelectOption(
                    label="–ö–æ–º–∞–Ω–¥—ã –Ω–∞ –ø—Ä–∞–≤—É—é –∫–Ω–æ–ø–∫—É –º—ã—à–∏", description="–ö–æ–º–∞–Ω–¥—ã –Ω–∞ –ø—Ä–∞–≤—É—é –∫–Ω–æ–ø–∫—É –º—ã—à–∏", emoji="üñ±", value="right-click-commands"
                ),
            ]

            # The placeholder is what will be shown when no option is chosen
            # The min and max values indicate we can only pick one of the three options
            # The options parameter defines the dropdown options. We defined this above
            super().__init__(
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                min_values=1,
                max_values=1,
                options=options,
            )
        if langCodeReal == 'en':
            # Set the options that will be presented inside the dropdown
            options = [
                discord.SelectOption(
                    label="Moderation", description="Commands for moderation", emoji="üîß", value="moderation"
                ),
                discord.SelectOption(
                    label="Generations", description="Commands for generations", emoji="üö¶", value="command_generations"
                ),
                discord.SelectOption(
                    label="AutoMod", description="Commands for automod", emoji="üî®", value="automod"
                ),
                discord.SelectOption(
                    label="Fun", description="Commands for fun", emoji="üéÆ", value="fun"
                ),
                discord.SelectOption(
                    label="Right-click commands", description="Commands for right-click", emoji="üñ±", value="right-click-commands"
                ),
            ]

            # The placeholder is what will be shown when no option is chosen
            # The min and max values indicate we can only pick one of the three options
            # The options parameter defines the dropdown options. We defined this above
            super().__init__(
                placeholder="Select category",
                min_values=1,
                max_values=1,
                options=options,
            )


    async def callback(self, interaction: discord.MessageInteraction):
        cursor.execute(f"SELECT lang_code FROM guilds_lang WHERE guild_id = {interaction.guild.id}")
        langCode = cursor.fetchone()
        langCodeStr = str(langCode)
        langCodeReal = langCodeStr.replace('(', '').replace(')', '').replace(',', '').replace("'", '')
        
        # select menu
        if langCodeReal == "ru":
            if self.values[0] == "moderation":
                embed = discord.Embed(title="–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º", description=f"–ù–∏–∂–µ –ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ", color=embedColor)
                embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞", value=f"""
                –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞:
                \n - kick <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> <–ø—Ä–∏—á–∏–Ω–∞> - –ö–∏–∫–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                \n - ban <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> <–ø—Ä–∏—á–∏–Ω–∞> - –ë–∞–Ω–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                \n - unban <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> - –†–∞–∑–±–∞–Ω–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                \n - mute <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> <–≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö> <–ø—Ä–∏—á–∏–Ω–∞> - –ú—É—Ç–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                \n - clear <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ> - –û—á–∏—â–∞–µ—Ç —á–∞—Ç
                \n - del_spam_channels <–Ω–∞–∑–≤–∞–Ω–∏–µ> - –£–¥–∞–ª—è–µ—Ç –∫–∞–Ω–∞–ª—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
                \n - del_spam_roles <–Ω–∞–∑–≤–∞–Ω–∏–µ> - –£–¥–∞–ª—è–µ—Ç —Ä–æ–ª–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
                \n - backup <–¥–µ–π—Å—Ç–≤–∏–µ> - –°–¥–µ–ª–∞—Ç—å –±—ç–∫–∞–ø —Å–µ—Ä–≤–µ—Ä–∞
                """, inline=False)
                await interaction.response.edit_message(embed=embed)
            elif self.values[0] == "command_generations":
                embed = discord.Embed(title="–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º", description=f"–ù–∏–∂–µ –ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ", color=embedColor)
                embed.add_field(name="–ö–æ–º–∞–Ω–¥—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–π", value=f"""
                –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–π —Ä–∞–∑–Ω—ã—Ö —à—Ç—É–∫:
                \n - rand_number <–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ> <–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ> - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ
                \n - rand_string <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤> - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
                \n - rand_uuid - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã UUID
                \n - generate_embed - –°–¥–µ–ª–∞—Ç—å —ç–º–±–µ–¥""", inline=False)
                await interaction.response.edit_message(embed=embed)
            elif self.values[0] == "automod":
                embed = discord.Embed(title="–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º", description=f"–ù–∏–∂–µ –ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ", color=embedColor)
                embed.add_field(name="–ê–≤—Ç–æ–ú–æ–¥–µ—Ä–∞—Ü–∏—è", value=f"""
                –ê–≤—Ç–æ–º–æ–¥–µ—Ä–∞—Ü–∏—è **–≤—ã–∫–ª—é—á–µ–Ω–∞** –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –Ω–æ –µ—ë –º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å
                \n - automod_spam <off/on> - –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–æ–¥–µ—Ä–∞—Ü–∏—é –ø–æ —Å–ø–∞–º—É
                \n - automod_badwords <off/on> - –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–æ–¥–µ—Ä–∞—Ü–∏—é –ø–æ –º–∞—Ç–∞–º
                \n - automod_raid <off/on> - –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–æ–¥–µ—Ä–∞—Ü–∏—é –ø–æ —Ä–µ–π–¥–∞–º-–∫—Ä–∞—à–∞–º
                """, inline=False)
                await interaction.response.edit_message(embed=embed)
            elif self.values[0] == "fun":
                embed = discord.Embed(title="–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º", description=f"–ù–∏–∂–µ –ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ", color=embedColor)
                embed.add_field(name="–í—Å—è–∫–∏–µ –≤–µ—Å—ë–ª—ã–µ —à—Ç—É–∫–∏", value=f"""
                GenAi **–≤—ã–∫–ª—é—á–µ–Ω** –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –Ω–æ –µ–≥–æ –º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å
                \n - animals - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–∑–Ω—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö
                \n - genai_toggle <–∫–∞–Ω–∞–ª> <–≤–∫–ª/–≤—ã–∫–ª> - –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å GenAi
                """, inline=False)
                await interaction.response.edit_message(embed=embed)
            elif self.values[0] == "right-click-commands":
                embed = discord.Embed(title="–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º", description=f"–ù–∏–∂–µ –ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ", color=embedColor)
                embed.add_field(name="–ö–æ–º–∞–Ω–¥—ã –Ω–∞ –ø—Ä–∞–≤—É—é –∫–Ω–æ–ø–∫—É –º—ã—à–∏", value=f"""
                –ò–ª–∏ –∂–µ –Ω–∞ –∑–∞–∂–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                \n –ö–æ–º–∞–Ω–¥—ã –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
                \n - –ê–≤–∞—Ç–∞—Ä - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                \n - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                \n –ö–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ:
                \n - –†–µ–ø–æ—Ä—Ç–Ω—É—Ç—å –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–ª–æ—Ö–∏–º —Å–ª–æ–≤–æ–º
                """, inline=False)
                await interaction.response.edit_message(embed = embed)
        elif langCodeReal == "en":
            if self.values[0] == "moderation":
                embed = discord.Embed(title="Help for commands", description=f"Below are all commands of the bot\nTo select a category, click below", color=embedColor)
                embed.add_field(name="Commands for moderation of the server", value=f"""
                \n - kick <user> <reason> - Kicks the user
                \n - ban <user> <reason> - Bans the user
                \n - unban <user> - Unbans the user
                \n - mute <user> <time in seconds> <reason> - Mutes the user
                \n - clear <amount> - Clears the chat
                \n - del_spam_channels <name> - Deletes channels with the same name
                \n - del_spam_roles <name> - Deletes roles with the same name
                \n - backup <action> - Make a server backup
                """, inline=False)
                await interaction.response.edit_message(embed=embed)
            elif self.values[0] == "command_generations":
                embed = discord.Embed(title="Help for commands", description=f"Below are all commands of the bot\nTo select a category, click below", color=embedColor)
                embed.add_field(name="Commands for command generations", value=f"""
                Commands for command generations:
                \n - rand_number <min> <max> - Generates a random number
                \n - rand_string <amount> - Generates random characters
                \n - rand_uuid - Generates a random UUID
                \n - generate_embed - Make an embed""" , inline=False)
                await interaction.response.edit_message(embed=embed)
            elif self.values[0] == "automod":
                embed = discord.Embed(title="Help for commands", description=f"Below are all commands of the bot\nTo select a category, click below", color=embedColor)
                embed.add_field(name="Automod commands", value=f"""
                \n - automod_spam <off/on> - Enable/disable automod for spam
                \n - automod_badwords <off/on> - Enables/disables automod for badwords
                \n - automod_raid <off/on> - Enables/disables automod for raids
                """ , inline=False)
                await interaction.response.edit_message(embed=embed)
            elif self.values[0] == "fun":
                embed = discord.Embed(title="Help for commands", description=f"Below are all commands of the bot\nTo select a category, click below", color=embedColor)
                embed.add_field(name="Commands for fun", value=f"""
                \n - animals - Shows different animals
                \n - genai_toggle <channel> <on/off> - Enables/disables GenAi
                """, inline=False)
                await interaction.response.edit_message(embed=embed)
            elif self.values[0] == "right-click-commands":
                embed = discord.Embed(title="Help for commands", description=f"Below are all commands of the bot\nTo select a category, click below", color=embedColor)
                embed.add_field(name="Commands for right-click", value=f"""
                \n - avatar - Shows the avatar of the user
                \n - info - Shows information about the user
                \n - report <word> - Sends a message to the developers with the bad word
                """, inline=False)
                await interaction.response.edit_message(embed=embed)
                





class DropdownView(discord.ui.View):
    def __init__(self, langCode):
        super().__init__()

        # Adds the dropdown to our view object.
        self.add_item(HelpDropdown(langCode))

class HelpCommand(commands.Cog):
    @commands.slash_command(description=Localized("Shows help on commands", key="HELP_DESCRIPTION"))
    async def help(ctx):
        cursor.execute(f"SELECT lang_code FROM guilds_lang WHERE guild_id = {ctx.guild.id}")
        langCode = cursor.fetchone()
        langCodeStr = str(langCode)
        langCodeReal = langCodeStr.replace('(', '').replace(')', '').replace(',', '').replace("'", '')
        
        # select menu
        if langCodeReal == "ru":
            embed = discord.Embed(title="–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º", description=f"–ù–∏–∂–µ –ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ", color=embedColor)
            await ctx.response.send_message(embed = embed, view=DropdownView(langCodeReal), ephemeral=True)
        elif langCodeReal == "en":
            embed = discord.Embed(title="Help for commands", description=f"Below are all commands of the bot\nTo select a category, click below", color=embedColor)
            await ctx.response.send_message(embed = embed, view=DropdownView(langCodeReal), ephemeral=True)



def setup(bot):
    bot.i18n.load("locale/")
    bot.add_cog(HelpCommand(bot))